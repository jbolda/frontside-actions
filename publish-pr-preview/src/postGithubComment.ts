import { GitHub } from "@actions/github/lib/utils";
import { PullRequestPayload } from ".";
import { Operation } from "effection";

export function* postGithubComment({
  comment,
  octokit,
  payload,
}:{
  comment: string,
  octokit: InstanceType<typeof GitHub>,
  payload: PullRequestPayload,
}): Operation<void> {
  let {
    repository: {
      name: repo,
      owner: {
        name: owner,
      },
    },
    pull_request: {
      number: issue_number,
    },
  } = payload;
  let tag = "<p align='right'><em>Generated by <a href='https://github.com/thefrontside/actions/tree/main/publish-pr-preview'>thefrontside/actions/publish-pr-preview</a>.<br>Please <a href='https://github.com/thefrontside/actions/issues/new'>create an issue</a> in the repository if you have any feedback.<em></p><!-- Published Preview Action by Frontside -->";
  let body = comment+tag;
  let allComments = yield octokit.rest.issues.listComments({ owner, repo, issue_number });
  let previousComment = allComments.data.length > 0 &&
    allComments.data.find((comment: { body: string | string[]; }) => comment.body.includes(tag));

  if (previousComment) {
    yield octokit.rest.issues.updateComment({
      owner,
      repo,
      comment_id: previousComment.id,
      body,
    });
  } else {
    yield octokit.rest.issues.createComment({
      owner,
      repo,
      issue_number,
      body,
    });
  }
}
